<div class="add-form-container" data-form-container-el>
  <form class="form" action="<%- apiConfig.recordCreateUrl %>" method="post">
<!--     <input type='hidden' name='_csrf' value='<%= _csrf %>'> -->
    <input type="hidden" name="title" data-title-el />
    <input type="hidden" name="url" data-url-el />
    <input type="hidden" name="imageUrl" data-image-url-el />
    <input type="hidden" name="content" data-content-el />
    <input type="hidden" name="cuttedContent" data-cutted-content-el />

    <div class="field">
      <div class="element message-element">
        <textarea name="message" placeholder="<%- __('Write thoughts or put URL here') %>" autofocus data-message-el></textarea>
      </div>
    </div>
    <div class="attachment-container" data-attachment-container-el></div>
    <div class="control">
      <input class="button" type="submit" value="<%- __('Add') %>" />
      <a class="button simple-button" href="<%- apiConfig.recordIndexUrl %>" data-cancel-btn-el><%- __('Cancel') %></a>
    </div>
  </form>
</div>

<!-- <link rel="stylesheet" href="/js/jquery-notebook/src/js/jquery.notebook.css" />
<script src="/js/jquery-notebook/src/js/jquery.notebook.js"></script>-->

<script>

(function() {

var containerEl = $('[data-form-container-el]'),
    messageEl = containerEl.find('[data-message-el]'),
    attachmentContainerEl = containerEl.find('[data-attachment-container-el]'),
    titleEl = containerEl.find('[data-title-el]'),
    urlEl = containerEl.find('[data-url-el]'),
    imageUrlEl = containerEl.find('[data-image-url-el]'),
    contentEl = containerEl.find('[data-content-el]'),
    cuttedContentEl = containerEl.find('[data-cutted-content-el]'),
    maxLength = 255;

// Url
messageEl.on('change', function() {
  var text = this.value,
      matchedUrls,
      title,
      url,
      content,
      trimmedString,
      imageUrl,
      matchedImagesUrls,
      cuttedContent;

  matchedUrls = text.match(/(\b((https?|ftp|file):\/\/)?[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig);

  if (matchedUrls) {
    url = matchedUrls[0];

    $.get(window.api.config.recordFetchUrl + '?url='+url).done(function(data) {
      if (! data.error) {
        title = data.title;
        content = data.contents;

        if (content.length > 0) {
          
          matchedImagesUrls = content.match(/<img [^>]*src="([^>"]+\/([^>"]+))"[^>]*?>/i);
          
          cuttedContent = content.replace(/(<([^>]+)>)/ig, '');
          cuttedContent = cuttedContent.substr(0, maxLength);

          //re-trim if we are in the middle of a word
          cuttedContent = cuttedContent.substr(0, Math.min(cuttedContent.length, cuttedContent.lastIndexOf(" ")));
          cuttedContent = cuttedContent + '&hellip;';
          
          if (matchedImagesUrls) {
            imageUrl = matchedImagesUrls[1];
          }
        }

        $.post(window.api.config.recordAttrchmentHtmlUrl, {
          title: title,
          cuttedContent: cuttedContent,
          imageUrl: imageUrl,
          url: url
        }).done(function(data) {
          if (! data.error) {
            attachmentContainerEl.html(data);
            attachmentContainerEl.show();
            
            titleEl.val(title);
            urlEl.val(url);
            contentEl.val(content);
            cuttedContentEl.val(cuttedContent);
            imageUrlEl.val(imageUrl);
          }
        });
      }
    });
  }
});

})();

</script>